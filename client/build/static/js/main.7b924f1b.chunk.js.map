{"version":3,"sources":["components/Nav/index.js","utils/API.js","components/Jumbotron/index.js","components/SearchForm/index.js","components/BookCard/index.js","pages/Search.js","pages/Bookshelf.js","pages/NoMatch.js","App.js","index.js"],"names":["Index","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","window","location","pathname","API_KEY","process","API","getGoogleBooks","search","axios","get","concat","saveBook","bookData","post","getBookshelf","deleteBook","delete","Jumbotron","props","style","backgroundImage","image","backgroundSize","title","lead","instructions","SearchForm","htmlFor","value","onChange","handleInputChange","placeholder","onClick","handleFormSubmit","BookCard","books","map","book","key","_id","googleBookId","subtitle","src","thumbnail","alt","authors","join","description","pageCount","publishedDate","href","link","target","rel","buttonType","buttonAction","buttonText","formatBookResults","googleApiResults","bookArray","formattedBook","volumeInfo","imageLinks","canonicalVolumeLink","push","Search","state","results","error","event","chosenBook","_this","find","newSave","then","res","console","log","status","statusText","alert","show","catch","err","timeout","setState","preventDefault","formattedArray","data","items","components_Jumbotron","components_SearchForm","this","components_BookCard","Component","withAlert","Bookshelf","loadBookshelf","NoMatch","App","BrowserRouter","Nav","Switch","Route","exact","path","component","options","position","offset","transition","Root","react_alert","Object","assign","template","AlertTemplate","src_App","ReactDOM","render","src_Root","document","getElementById"],"mappings":"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","file":"static/js/main.7b924f1b.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Index() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Google Library\n        </Link>\n      <div className=\"container\">\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"/>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\"\n                    className={window.location.pathname === \"/\" || window.location.pathname === \"/search\"\n                      ? \"nav-link active\"\n                      : \"nav-link\"}>Search</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/bookshelf\"\n                    className={window.location.pathname === \"/bookshelf\"\n                      ? \"nav-link active\"\n                      : \"nav-link\"}>My Bookshelf</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Index;","import axios from 'axios';\n\nconst DEFAULT_HPP = '15';\n\nconst PATH_BASE = 'https://www.googleapis.com/books/v1';\nconst PATH_SEARCH = '/volumes';\nconst PARAM_SEARCH = 'q=';\nconst PARAM_HPP = 'maxResults=';\nconst API_KEY = process.env.API_KEY;\n\nexport default {\n  getGoogleBooks: function (search) {\n    return axios.get(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${search}&${PARAM_HPP}${DEFAULT_HPP}&key=${API_KEY}`)\n  },\n\n  saveBook: function (bookData) {\n    return axios.post('/api/bookshelf', bookData);\n  },\n\n  getBookshelf: function () {\n    return axios.get('/api/bookshelf')\n  },\n\n  deleteBook: function (id) {\n    return axios.delete(`/api/bookshelf/${id}`)\n  }\n};","import React from 'react';\nimport './style.css';\n\nfunction Jumbotron(props) {\n  return (\n    <div className=\"container mt-4\">\n      <div className=\"jumbotron text-center text-white\" style={{backgroundImage: `url(${props.image})`, backgroundSize: 'cover'}}>\n        <h1 className=\"display-4 title\">{props.title}</h1>\n        <p className=\"lead\">{props.lead}</p>\n        <hr className=\"my-4\"/>\n        <p className=\"instructions\">{props.instructions}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Jumbotron;","import React from 'react';\n\nfunction SearchForm(props) {\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-12\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"book-search\">\n                  Search:\n                </label>\n                <input type=\"text\"\n                       value={props.search}\n                       onChange={props.handleInputChange}\n                       className=\"form-control\"\n                       id=\"book-search\"\n                       placeholder=\"Eloquent JavaScript 3rd Edition\"/>\n              </div>\n              <button type=\"submit\"\n                      className=\"btn btn-primary\"\n                      onClick={props.handleFormSubmit}>\n                Search\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchForm;","import React from 'react';\nimport './style.css';\n\n// Re-usable Stateless Component for both the Search and the Bookshelf Pages.\nfunction BookCard(props) {\n  return (\n    <div className=\"row mb-5\">\n      <div className=\"col-lg-12\">\n        {props.books.map(book => (\n          <div className=\"card mt-4\"\n               key={\n                 book._id\n                   ? book._id\n                   : book.googleBookId\n               }>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{book.title}</h5>\n              <h6 className=\"card-subtitle mb-2 text-muted\">{book.subtitle}</h6>\n              <div className=\"media\">\n                <img src={book.thumbnail}\n                     className=\"align-self-center mr-3\" alt=\"testing\"/>\n                <div className=\"media-body\">\n                  <h6 className=\"mt-0\">{book.authors.join(', ')}</h6>\n                  <p className=\"mb-0\">{book.description}</p>\n                  <p className=\"mb-0\">\n                    <small className=\"text-muted\">{book.pageCount} pages.</small>\n                  </p>\n                  <p className=\"mb-2\">\n                    <small className=\"text-muted\">Published: {book.publishedDate}</small>\n                  </p>\n                </div>\n              </div>\n              <a className=\"btn btn-info mr-1 mt-2\" href={book.link} target=\"_blank\"\n                 rel=\"noopener noreferrer\">View Book</a>\n              <button className={props.buttonType}\n                      onClick={props.buttonAction}\n                      id={\n                        book._id\n                          ? book._id\n                          : book.googleBookId\n                      }\n              >\n                {props.buttonText}\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default BookCard;","import React, {Component} from 'react';\nimport {withAlert} from 'react-alert';\nimport API from '../utils/API';\nimport Jumbotron from '../components/Jumbotron';\nimport SearchForm from '../components/SearchForm';\nimport BookCard from '../components/BookCard';\n\n// Function to format the book results as they are returned from the API.  Allows for a single component 'BookCard'\n// that can be used in both pages.\nconst formatBookResults = googleApiResults => {\n  const bookArray = [];\n\n  googleApiResults.map(book => {\n\n    const formattedBook = {\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors\n        ? book.volumeInfo.authors\n        : ['No Author Listed.'],\n      description: book.volumeInfo.description\n        ? book.volumeInfo.description\n        : 'No Description Listed.',\n      googleBookId: book.id,\n      thumbnail: book.volumeInfo.imageLinks\n        ? book.volumeInfo.imageLinks.thumbnail\n        : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/170px-No_image_available.svg.png',\n      link: book.volumeInfo.canonicalVolumeLink,\n      pageCount: book.volumeInfo.pageCount,\n      subtitle: book.volumeInfo.subtitle,\n      publishedDate: book.volumeInfo.publishedDate\n    };\n\n    bookArray.push(formattedBook);\n    return bookArray\n  });\n  return bookArray;\n};\n\nclass Search extends Component {\n  state = {\n    search: '',\n    results: [],\n    error: ''\n  };\n\n  // Method for saving a particular book to the database.\n  saveBook = event => {\n\n    const chosenBook = this.state.results.find(book => book.googleBookId === event.target.id);\n\n    const newSave = {\n      title: chosenBook.title,\n      authors: chosenBook.authors,\n      description: chosenBook.description,\n      googleBookId: chosenBook.googleBookId,\n      thumbnail: chosenBook.thumbnail,\n      link: chosenBook.link,\n      pageCount: chosenBook.pageCount,\n      subtitle: chosenBook.subtitle,\n      publishedDate: chosenBook.publishedDate\n    };\n\n    API.saveBook(newSave)\n      .then(res => {\n        console.log(res.status, res.statusText);\n        this.props.alert.show('Book Saved!', {type: 'success'})\n      })\n      .catch(err => {\n        console.log(err);\n        this.props.alert.show('Sorry, There was an issue with something back here...', {\n          type: 'error',\n          timeout: 5000\n        })\n      })\n  };\n\n  // Method handling the change of the input field.\n  handleInputChange = event => {\n    this.setState({search: event.target.value})\n  };\n\n  // Method handling the submission of the Search form, makes a call to retrieve the results of the search\n  // from Google Books API.\n  handleFormSubmit = event => {\n    event.preventDefault();\n    // console.log(`Search for: ${this.state.search}`);\n    API.getGoogleBooks(this.state.search)\n      .then(res => {\n        const formattedArray = formatBookResults(res.data.items);\n        this.setState({results: formattedArray});\n      })\n      .catch(err => console.log(err))\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n\n        <Jumbotron\n          title=\"Search\"\n          lead=\"Using Google Books API\"\n          instructions=\"Search for a book; then view it on Google Books, or add it to your Bookshelf...\"\n          image=\"https://www.travelcaffeine.com/wp-content/uploads/2017/07/last-bookstore-tunnel-downtown-los-angeles-california-876.jpg\"\n        />\n        <SearchForm\n          handleInputChange={this.handleInputChange}\n          handleFormSubmit={this.handleFormSubmit}\n        />\n        <BookCard\n          books={this.state.results}\n          buttonAction={this.saveBook}\n          buttonType=\"btn btn-success mt-2\"\n          buttonText=\"Save Book\"\n        />\n      </div>\n    );\n  }\n}\n\n// Exporting Component Utilizing the Alerts.\nexport default withAlert(Search);","import React, {Component} from 'react';\nimport API from '../utils/API';\nimport Jumbotron from '../components/Jumbotron';\nimport BookCard from '../components/BookCard';\n\nclass Bookshelf extends Component {\n  state = {books: []};\n\n  // Method to Query the API/Database to GET all the books in the database.\n  loadBookshelf = () => {\n    API.getBookshelf()\n      .then(res => this.setState({books: res.data}))\n      .catch(err => console.log(err))\n  };\n\n  // Method to DELETE a particular book from the database.\n  deleteBook = event => {\n    API.deleteBook(event.target.id)\n      .then(res => this.loadBookshelf())\n      .catch(err => console.log(err))\n  };\n\n  // Lifecycle Method - once the Bookshelf Component mounts it runs the 'loadBookshelf' method.\n  componentDidMount() {\n    this.loadBookshelf()\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Jumbotron\n          title=\"My Bookshelf\"\n          lead=\"All of Your Saved Books in One Convenient Location.\"\n          instructions=\"View your book at Google, or remove it from your Bookshelf...\"\n          image=\"https://i0.wp.com/www.wayfaringviews.com/wp-content/uploads/2016/05/Last_Bookstore.jpg?ssl=1\"\n        />\n        <BookCard\n          books={this.state.books}\n          buttonAction={this.deleteBook}\n          buttonType=\"btn btn-danger mt-2\"\n          buttonText=\"Delete Book\"\n        />\n      </div>\n    )\n  }\n}\n\nexport default Bookshelf;\n","import React from 'react'\nimport Jumbotron from '../components/Jumbotron';\n\nfunction NoMatch() {\n  return (\n    <div className=\"container\">\n      <Jumbotron\n        image=\"http://www.justscience.in/wp-content/uploads/2018/01/what-would-happen-if-someone-detonated-a-nuclear-bomb-today.jpg\"\n        title=\"404\"\n        lead=\"Page Not Found\"\n        instructions=\"Run for Your Lives!!!\"\n      />\n    </div>\n  )\n}\n\nexport default NoMatch;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Search from './pages/Search';\nimport Bookshelf from './pages/Bookshelf';\nimport NoMatch from './pages/NoMatch'\n\n\nconst App = () => (\n  <Router>\n    <div>\n      <Nav/>\n      <Switch>\n        <Route exact path=\"/\" component={Search}/>\n        <Route exact path=\"/search\" component={Search}/>\n        <Route exact path=\"/bookshelf\" component={Bookshelf}/>\n        <Route component={NoMatch}/>\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider as AlertProvider} from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\nimport App from './App';\nimport './index.css';\n// import * as serviceWorker from './serviceWorker';\n\n// Alert Default Options\nconst options = {\n  position: 'top center',\n  timeout: 3000,\n  offset: '30px',\n  transition: 'scale'\n};\n\n// Wrapping the Application in the Alert Provider\nclass Root extends Component {\n  render () {\n    return (\n      <AlertProvider template={AlertTemplate} {...options}>\n        <App/>\n      </AlertProvider>\n    )\n  }\n}\n\nReactDOM.render(<Root/>, document.getElementById('root'));\n\n// This was there for Development Purposes to prevent refresh and allow the logs to the console to remain.\n/*if (module.hot) {\n  module.hot.accept()\n}*/\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}